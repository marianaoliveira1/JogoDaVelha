{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/reactjs/JogoDaVelha/src/components/home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game() {\n  _s();\n\n  const emptyBoard = Array(9).fill(\"\");\n  const [board, setBoard] = useState(emptyBoard);\n  const [currentPlay, setCurrentPlayer] = useState(\"O\");\n  const [winner, setWinner] = useState();\n\n  const handleCellClick = index => {\n    if (winner) {\n      return null;\n    }\n\n    if (board[index] !== \"\") {\n      return null;\n    }\n\n    setBoard(board.map((item, itemIndex) => itemIndex === index ? currentPlay : item));\n    setCurrentPlayer(currentPlay === 'X' ? \"O\" : \"X\");\n  };\n\n  const checkWinner = () => {\n    const possibleWaysToWin = [[board[0], board[1], board[2]], [board[3], board[4], board[5]] // [board[6], board[7], board[8]]\n    // [board[0], board[3], board[6]]\n    // [board[1], board[4], board[7]]\n    // [board[2], board[5], board[8]]\n    // [board[0], board[4], board[8]]\n    // [board[2], board[4], board[6]]\n    ];\n    possibleWaysToWin.forEach(cells => {\n      if (cells.every(cells => cells === \"0\")) {\n        setWinner(\"O venceu\");\n      }\n\n      if (cells.every(cells => cells === \"X\")) {\n        setWinner(\"X venceu\");\n      }\n    });\n  };\n\n  useEffect(checkWinner, [board]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Jogo da velha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `board ${winner ? \"game-over\" : \"\"}`,\n      children: board.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCellClick(index),\n        className: `cell ${item}`,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"winner-message\",\n        children: [winner, \" venceu\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"Tz0g4Yu91mkCHaJX/0Ezfnyapsg=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/mariana/Documents/reactjs/JogoDaVelha/src/components/home.js"],"names":["useEffect","useState","Game","emptyBoard","Array","fill","board","setBoard","currentPlay","setCurrentPlayer","winner","setWinner","handleCellClick","index","map","item","itemIndex","checkWinner","possibleWaysToWin","forEach","cells","every"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAMC,UAAU,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,UAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,gBAAd,IAAkCR,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;;AAEA,QAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAGH,MAAH,EAAW;AACP,aAAO,IAAP;AACH;;AAGD,QAAGJ,KAAK,CAACO,KAAD,CAAL,KAAiB,EAApB,EAAwB;AACpB,aAAO,IAAP;AACH;;AAEDN,IAAAA,QAAQ,CAACD,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,SAAP,KAAqBA,SAAS,KAAKH,KAAd,GAAsBL,WAAtB,GAAoCO,IAAnE,CAAD,CAAR;AAEAN,IAAAA,gBAAgB,CAACD,WAAW,KAAK,GAAhB,GAAsB,GAAtB,GAA2B,GAA5B,CAAhB;AACH,GAbD;;AAeA,QAAMS,WAAW,GAAG,MAAM;AACtB,UAAMC,iBAAiB,GAAG,CACtB,CAACZ,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,CADsB,EAEtB,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,CAFsB,CAGtB;AAEA;AACA;AACA;AAEA;AACA;AAVsB,KAA1B;AAaAY,IAAAA,iBAAiB,CAACC,OAAlB,CAA0BC,KAAK,IAAI;AAC/B,UAAGA,KAAK,CAACC,KAAN,CAAYD,KAAK,IAAIA,KAAK,KAAK,GAA/B,CAAH,EAAwC;AACpCT,QAAAA,SAAS,CAAC,UAAD,CAAT;AACH;;AAED,UAAGS,KAAK,CAACC,KAAN,CAAYD,KAAK,IAAIA,KAAK,KAAK,GAA/B,CAAH,EAAwC;AACpCT,QAAAA,SAAS,CAAC,UAAD,CAAT;AACH;AACJ,KARD;AASH,GAvBD;;AAyBAX,EAAAA,SAAS,CAACiB,WAAD,EAAc,CAACX,KAAD,CAAd,CAAT;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,SAAQI,MAAM,GAAG,WAAH,GAAiB,EAAG,EAAnD;AAAA,gBAEQJ,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOF,KAAP,kBACN;AACA,QAAA,OAAO,EAAE,MAAMD,eAAe,CAACC,KAAD,CAD9B;AAGA,QAAA,SAAS,EAAG,QAAOE,IAAK,EAHxB;AAAA,kBAIEA;AAJF,SAEKF,KAFL;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYKH,MAAM,iBACK;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,mBACKA,MADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAvEeR,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport function Game() {\n    const emptyBoard = Array(9).fill(\"\");\n    const [board, setBoard] = useState(emptyBoard);\n    const [currentPlay, setCurrentPlayer] = useState(\"O\");\n    const [winner, setWinner] = useState();\n\n    const handleCellClick = (index) => {\n        if(winner) {\n            return null;\n        }\n\n\n        if(board[index] !== \"\") {\n            return null;\n        }\n\n        setBoard(board.map((item, itemIndex) => itemIndex === index ? currentPlay : item));\n\n        setCurrentPlayer(currentPlay === 'X' ? \"O\": \"X\")\n    }\n\n    const checkWinner = () => {\n        const possibleWaysToWin = [\n            [board[0], board[1], board[2]],\n            [board[3], board[4], board[5]]\n            // [board[6], board[7], board[8]]\n\n            // [board[0], board[3], board[6]]\n            // [board[1], board[4], board[7]]\n            // [board[2], board[5], board[8]]\n\n            // [board[0], board[4], board[8]]\n            // [board[2], board[4], board[6]]\n        ];\n\n        possibleWaysToWin.forEach(cells => {\n            if(cells.every(cells => cells === \"0\")) {\n                setWinner(\"O venceu\");\n            }\n\n            if(cells.every(cells => cells === \"X\")) {\n                setWinner(\"X venceu\");\n            }\n        })\n    }\n\n    useEffect(checkWinner, [board]);\n\n    return (\n        <main>\n            <h1 className=\"title\">Jogo da velha</h1>\n            <div className={`board ${winner ? \"game-over\" : \"\"}`}>\n                {\n                    board.map((item, index) => (\n                        <div \n                        onClick={() => handleCellClick(index)}\n                        key={index}\n                        className={`cell ${item}`}\n                        >{item}</div>\n                ))}\n            </div>      \n            {winner &&\n                        <footer>\n                            <h2 className=\"winner-message\">\n                                {winner} venceu\n                            </h2>\n                        </footer>\n                        }\n\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}