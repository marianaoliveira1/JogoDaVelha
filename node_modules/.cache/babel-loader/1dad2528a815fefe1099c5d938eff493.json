{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/reactjs/JogoDaVelha/src/components/home.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game() {\n  _s();\n\n  const emptyBoard = Array(9).fill(\"\");\n  const [board, setBoard] = useState(emptyBoard);\n  const [currentPlay, setCurrentPlayer] = useState(\"O\");\n\n  const handleCellClick = index => {\n    setBoard(board.map((item, itemIndex) => itemIndex === index ? currentPlay : item));\n    setCurrentPlayer(currentPlay === 'X' ? \"O\" : \"X\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Jogo da velha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCellClick(index),\n        className: `cell ${item}`,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"ERdVc3lwnOIjFgbDtVByNENHqU8=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/mariana/Documents/reactjs/JogoDaVelha/src/components/home.js"],"names":["useState","Game","emptyBoard","Array","fill","board","setBoard","currentPlay","setCurrentPlayer","handleCellClick","index","map","item","itemIndex"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAMC,UAAU,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,UAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,gBAAd,IAAkCR,QAAQ,CAAC,GAAD,CAAhD;;AAEA,QAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/BJ,IAAAA,QAAQ,CAACD,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,SAAP,KAAqBA,SAAS,KAAKH,KAAd,GAAsBH,WAAtB,GAAoCK,IAAnE,CAAD,CAAR;AAEAJ,IAAAA,gBAAgB,CAACD,WAAW,KAAK,GAAhB,GAAsB,GAAtB,GAA2B,GAA5B,CAAhB;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAEQF,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOF,KAAP,kBACN;AACA,QAAA,OAAO,EAAE,MAAMD,eAAe,CAACC,KAAD,CAD9B;AAGA,QAAA,SAAS,EAAG,QAAOE,IAAK,EAHxB;AAAA,kBAIEA;AAJF,SAEKF,KAFL;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA1BeT,I;;KAAAA,I","sourcesContent":["import { useState } from \"react\"\n\nexport function Game() {\n    const emptyBoard = Array(9).fill(\"\");\n    const [board, setBoard] = useState(emptyBoard);\n    const [currentPlay, setCurrentPlayer] = useState(\"O\");\n\n    const handleCellClick = (index) => {\n        setBoard(board.map((item, itemIndex) => itemIndex === index ? currentPlay : item));\n\n        setCurrentPlayer(currentPlay === 'X' ? \"O\": \"X\")\n    }\n\n    return (\n        <main>\n            <h1 className=\"title\">Jogo da velha</h1>\n            <div className=\"board\">\n                {\n                    board.map((item, index) => (\n                        <div \n                        onClick={() => handleCellClick(index)}\n                        key={index}\n                        className={`cell ${item}`}\n                        >{item}</div>\n                ))}\n            </div>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}